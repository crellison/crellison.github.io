---
import { getCollection, render } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection(
    'blog',
    ({ data }) => !data.isDraft || process.env.NODE_ENV === 'development'
  );
  console.log(posts.map((post) => post.id));
  return posts.map((post) => ({
    params: { id: post.id },
    props: { post },
  }));
}
const { post } = Astro.props;
const { Content } = await render(post);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>{post.data.title}</title>
    <meta name="description" content={post.data.description} />
    <meta name="author" content="Cole Ellison" />
    <meta name="keywords" content={post.data.tags.join(', ')} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/global.css" />
  </head>

  <body>
    <style is:global>
      body {
        margin: 10% 20%;
        max-width: 35em;
      }

      p {
        line-height: 1.3em;
        letter-spacing: 0.02em;
      }

      blockquote {
        border-left: 4px solid var(--yellow);
        padding-left: 0.5rem;
      }

      pre {
        padding: 1em;
        border-radius: 0.5rem;
      }

      @media only screen and (max-width: 800px) and (orientation: portrait) {
        body {
          margin: 10%;
        }
      }

      .back-button {
        position: fixed;
        top: 10px;
        left: 10px;
        width: 10vw;
        height: 10vw;
        max-width: 50px;
        max-height: 50px;
      }

      .back-button img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }

      .back-button img[alt='Box'] {
        transition: transform 0.3s ease-in-out;
      }
      .back-button:hover img[alt='Box'] {
        transform: scale(1.3);
      }
    </style>
    <a href="/" class="back-button">
      <img src="/quadrilateral.svg" alt="Box" />
      <img src="/arrow-left.svg" alt="Back" />
    </a>

    <h1>{post.data.title}</h1>
    <p>
      Cole Ellison â€¢ {post.data.publishedDate.toISOString().substring(0, 10)}
    </p>
    {
      post.data.publishedDate.valueOf() - post.data.updatedDate.valueOf() !==
        0 && (
        <p>Updated: {post.data.updatedDate.toISOString().substring(0, 10)}</p>
      )
    }
    <Content />
  </body>
</html>
